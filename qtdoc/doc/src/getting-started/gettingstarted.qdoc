/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \title Getting Started Guides

	\group gettingStarted

    \section1 Creating Applications Using Qt Is Easy
    To help you on your way, we have created two tutorials creating two similar applications,
    but using different approaches.

    Before starting, make sure to download either the commercial evaluation or the open source
    version of the Qt SDK and familiarize yourself with the \l{development tools}. The Qt SDK
    provides the \l{Qt Creator} IDE to make the development of Qt applications easy and efficient.

    \section1 User Interface Options
    In addition to intuitive, cross-platform abstractions for anything from
    \l{Core Internals#Threading}{threading}
    and \l{Networking and Connectivity}{network communication} to
    \l{Qt Multimedia Overview}{video playback and web camera access}, Qt provides two separate ways
    of creating graphical user interfaces which favor somewhat different use cases.

    The \l{Qt Quick} Module provides a declarative language for creating fluid and animated
    user interfaces, suited e.g. for applications which require a very distinctive look and feel and
    animated user interface elements, applications intended to run on small screens and applications
    targeted for touch input devices.

    The \l {Qt Widgets} Module provides support for the more traditional desktop applications,
    integrating seamlessly with the target platform, whether it's Mac OS X, Windows, KDE or Gnome.
    It is both a robust and flexible C++-based class library with existing components for many
    typical user interface widgets, and which is convenient to extend with new functionality
    when the need arises.

    Which module you choose to base your application on depends on the type of application
    you want to create. Since both approaches integrate with the rest of the Qt libraries, it
    is also possible to write much of the application logic independently. Familiarize yourself
    with the two options in the following tutorials before making your decision.

    For more detailed information, see the \l {User Interfaces} overview.
	
    \section1 The Tutorials
    There are two separate tutorials for creating two similar applications. One implements the
    user interface using Qt Quick, while the other uses Qt Widgets.
	
    Please click on one of the links below to start the ride.
	
*/

