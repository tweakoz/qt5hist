/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtquick-applicationdevelopers.html
\title QML Application Developer Resources
\brief Essential documentation for QML application developers

QML is a declarative language that allows user interfaces to be described in
terms of their visual components and how they interact and relate with one
another.  It is a highly readable language that was designed to enable
components to be interconnected in a dynamic manner, and it allows components
to be easily reused and customized within a user interface.  Using the
\c QtQuick module, designers and developers can easily build fluid animated
user interfaces in QML, and have the option of connecting these user
interfaces to any back-end C++ libraries.

This page links to all the information you need to start developing
applications with \l{Qt QML}{QML} and \l{Qt Quick}.

\section2 Other QML modules

Qt Quick only provides basic visual types, much of Qt's functionality is exposed to QML
through other modules. If you require the functionality of those modules, you should browse
their QML documentation. Qt Essentials modules exposing QML types include:

\list
\li \l QtMultimedia for playing and managing multimedia content and cameras.
\li \l QtWebkit for rendering web content.
\endlist

\section1 Quick Start

\list
\li \l{qtquick-quickstart-basics.html}{QML Basics}
    \list
    \li \l{qtquick-quickstart-basics.html#creating-a-qml-document}{Creating a QML Document}
    \li \l{qtquick-quickstart-basics.html#loading-and-displaying-the-qml-document}{Loading and Displaying the QML Document}
    \endlist
\li \l{qtquick-quickstart-essentials.html}{QML Essentials}
    \list
    \li \l{qtquick-quickstart-essentials.html#handling-user-input}{Handling User Input}
    \li \l{qtquick-quickstart-essentials.html#property-bindings}{Property Bindings}
    \li \l{qtquick-quickstart-essentials.html#animations}{Animations}
    \li \l{qtquick-quickstart-essentials.html#defining-custom-qml-types-for-re-use}{Defining Custom QML Types for Re-use}
    \endlist
\endlist

\section1 Code Samples and Demos

To learn more about uses of QML code, there are several code samples which show
how QML types are used. In addition, there are several demos which show how
QML code is used in applications.

\list
\li \l{Qt Quick Code Samples}
\li \l{QML Demos}
\endlist
\section1 Features And Use-Case Solutions

\list
\li \l{qtquick-usecase-visual.html}{Visual Elements in QML}
\li \l{qtquick-usecase-userinput.html}{Responding to User Input in QML}
\li \l{qtquick-usecase-animations.html}{Animations in QML}
\li \l{qtquick-usecase-text.html}{Displaying Text in QML}
\li \l{qtquick-usecase-layouts.html}{Layouts in QML}
\li \l{qtquick-usecase-styling.html}{Style and Theme Support}
\li \l{qtquick-usecase-integratingjs.html}{Integrating JavaScript in QML}
\endlist


\section1 In-Depth Documentation

\section2 What is QML?

QML is a user interface specification and programming language.
It allows developers and designers alike to create highly performant, fluidly
animated and visually appealing applications.  QML offers a highly readable,
declarative, JSON-like syntax with support for imperative JavaScript
expressions combined with dynamic property bindings.

The QML language and engine infrastructure is provided by the \l {Qt QML} module.
For in-depth information about the QML language, please see the
\l{Qt QML} module documentation.

\section2 What is Qt Quick?

Qt Quick is the standard library of types and functionality for QML.  It
includes visual elements, interactive elements, animations, models and views,
particle effects and shader effects.  A QML application developer can get
access to all of that functionality with a single import statement.

The \c QtQuick QML library is provided by the \l{Qt Quick} module.
For in-depth information about the various QML types and other functionality
provided by Qt Quick, please see the \l{Qt Quick} module documentation.

\section1 Advanced Application Development Topics

\list
\li \l{qtquick-deployment.html}{Deploying QML Applications}
\li \l{qtquick-performance.html}{Performance Considerations and Suggestions}
\li \l{qtquick-internationalization.html}{Internationalization and Localization}
\li Testing and Debugging
    \list
    \li \l{qtquick-qmlscene.html}{Prototyping with qmlscene}
    \li \l{qtquick-debugging.html}{Debugging QML Applications}
    \li \l{qtquick-qtquicktest.html}{QtQuickTest: QML Unit Testing Framework}
    \endlist
\li \l{qml-codingconventions.html}{QML Coding Conventions}
\li \l{qtquick-glossary.html}{Glossary of Terms}
\endlist

\section1 Release Notes and Porting Guides

\list
\li \l{Qt QML Release Notes}
\li \l{Qt Quick Release Notes}
\li \l{Porting QML Applications to Qt 5}
\endlist

*/
