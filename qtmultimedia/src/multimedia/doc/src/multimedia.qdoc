/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page multimediaoverview.html
\title Qt Multimedia Overview
\brief A set of APIs for working with audio, video, radio and camera devices.

\ingroup technology-apis


\section1 Overview

Multimedia support in Qt is provided by the Qt Multimedia module. The
Qt Multimedia module provides a rich feature set that enables you to easily
take advantage of a platforms multimedia capabilites and hardware.  This
ranges from the playback and recording of audio and video content to the use
of available devices like cameras and radios.

\section2 Features

Here are some examples of what can be done with Qt Multimedia APIs:

\list
\li Access raw audio devices for input and output
\li Play low latency sound effects
\li Play media files in playlists (like compressed audio, or video files)
\li Record audio and compress it
\li Tune and listen to radio stations, and receive radio program information
\li Use a camera, including viewfinder, image capture, and movie recording
\li Play 3D positional audio with \l {Positional Audio} {QtAudioEngine}
\li Decode audio media files into memory for processing
\li Accessing video frames or audio buffers as they are played or recorded
\endlist

\section2 Multimedia Components

All of these tasks can be broadly broken down into four main areas.  More information
(including background information and class references) are available here:

\list
\li \l {Audio Overview}
\li \l {Video Overview}
\li \l {Camera Overview}
\li \l {Radio Overview}
\endlist

\section2 Multimedia Recipes
For some quick recipes for specific tasks, look at the overviews above and consult this table:

\table 70%
    \header
        \li Use case
        \li Examples
        \li QML Types
        \li C++ Classes
    \row
        \li Playing a sound effect
        \li
        \li
        \li QSoundEffect
    \row
        \li Playing low latency audio
        \li \l{multimedia/audiooutput}{audioinput}, \l{multimedia/spectrum}{spectrum}
        \li
        \li QAudioOutput
    \row
        \li Playing encoded audio (MP3, AAC etc)
        \li \l{multimediawidgets/player}{player}
        \li \l Audio, \l {MediaPlayer}
        \li QMediaPlayer
    \row
        \li Accessing raw audio input data
        \li \l{multimedia/spectrum}{spectrum}, \l {multimedia/audioinput}{audioinput}
        \li
        \li QAudioInput
    \row
        \li Recording encoded audio data
        \li \l {multimedia/audiorecorder}{audiorecorder}
        \li
        \li QAudioRecorder
    \row
        \li Discovering raw audio devices
        \li \l {multimedia/audiodevices}{audiodevices}
        \li
        \li QAudioDeviceInfo
    \row
        \li Video Playback
        \li \l {multimediawidgets/player}{player},
            \l {multimedia/video/qmlvideo}{qmlvideo},
            \l{multimedia/video/qmlvideofx}{qmlvideofx}
        \li \l MediaPlayer, \l VideoOutput, \l Video
        \li QMediaPlayer, QVideoWidget, QGraphicsVideoItem
    \row
        \li Video Processing
        \li \l {multimedia/video/qmlvideofx}{qmlvideofx}
        \li \l {MediaPlayer}, \l VideoOutput
        \li QMediaPlayer, QAbstractVideoSurface, QVideoFrame
    \row
        \li Listening to the radio
        \li \l {multimedia/declarative-radio}{declarative-radio}
        \li \l Radio, \l RadioData
        \li QRadioTuner, QRadioData
    \row
        \li Accessing camera viewfinder
        \li \l {Camera Example}{camera},
            \l {multimediawidgets/declarative-camera}{declarative-camera}
        \li \l Camera, \l VideoOutput
        \li QCamera, QVideoWidget, QGraphicsVideoItem
    \row
        \li Viewfinder processing
        \li
        \li \l Camera, \l VideoOutput
        \li QCamera, QAbstractVideoSurface, QVideoFrame
    \row
        \li Capturing photos
        \li \l {Camera Example}{camera}, \l {multimediawidgets/declarative-camera}{declarative-camera}
        \li \l Camera
        \li QCamera, QCameraImageCapture
    \row
        \li Capturing movies
        \li \l {Camera Example}{camera}, \l {multimediawidgets/declarative-camera}{declarative-camera}
        \li \l Camera
        \li QCamera, QMediaRecorder
    \row
        \li 3D sound sources
        \li
        \li \l {AudioEngine Example}{Audio Engine}
        \li \l {AudioEngine}, \l Sound
        \li
\endtable

\section1 Limitations

In many cases the Qt Multimedia APIs build upon the multimedia framework of the underlying system.
This can mean that support for various codec or containers can vary between machines,
depending on what the end user has installed.

\section1 Advanced Usage

For developers wishing to access some platform specific settings,
or to port the Qt Multimedia APIs to a new platform or technology,
see \l{Multimedia Backend Development}.

\section1 Changes from Previous Versions

If you've previously used Qt Multimedia in Qt 4.x, or used Qt Multimedia Kit in Qt Mobility, please see
\l {Changes in Qt Multimedia} for more information on what has changed, and what you might need to
change when porting code.

\section1 Reference Documentation

\section2 QML Types
The following types are accessed by using:
\qml
import QtMultimedia 5.0
\endqml
\annotatedlist multimedia_qml
The following types are accessed by using \l {Positional Audio} {QtAudioEngine}:
\qml
import QtAudioEngine 1.0
\endqml
\annotatedlist multimedia_audioengine

\section2 Multimedia Classes

\annotatedlist multimedia

*/
